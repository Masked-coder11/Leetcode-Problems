class Solution
{
    public:
    Node* reverse(Node* head){
        if(!head || !head->next) return head;
        Node*prev=NULL, *temp=head;
        while(temp){
            Node* next=temp->next;
            temp->next=prev;
            prev=temp;
            temp=next;
        }
        return prev;
    }
    
    Node* addOne(Node *head)
    {
        head=reverse(head);
        Node*prev=NULL, *temp=head;
        int carry=1;
        while(carry && temp){
            temp->data+=carry;
            carry=temp->data/10;
            temp->data%=10;
            
            prev=temp;
            temp=temp->next;
        }
        
        while(carry){
            prev->next=new Node(carry);
            prev=prev->next;
            carry=prev->data/10;
            prev->data%=10;
        }
        return reverse(head);
        
    }
};
