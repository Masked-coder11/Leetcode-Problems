class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root==NULL) return 0;
        long long int ans=0;
        queue<pair<TreeNode*, long long int>>q;
        q.push({root, 0});
        while(!q.empty()){
            int n=q.size();
            long long int sub=q.front().second;
            long long int first, last;
            for(int i=0;i<n;i++){
                TreeNode* node=q.front().first;
                long long int ind=q.front().second-sub;
                q.pop();

                if(node->left){
                    q.push({node->left, ind*2+1});
                }
                if(node->right){
                    q.push({node->right, ind*2+2});
                }

                if(i==0){
                    first=ind;
                }
                if(i==n-1){
                    last=ind;
                }
            }
            ans=max(ans, last-first+1);
        }
        return ans;

    }
};
