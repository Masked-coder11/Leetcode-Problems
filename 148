class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* head=new ListNode(-1);
        ListNode* temp=head;
        while(list1 && list2){
            if(list1->val<=list2->val){
                temp->next=list1;
                list1=list1->next;
                temp=temp->next;
                temp->next=NULL;
            }
            else{
                temp->next=list2;
                list2=list2->next;
                temp=temp->next;
                temp->next=NULL;
            }
        }
        if(list1) temp->next=list1;
        else temp->next=list2;

        ListNode* newHead=head->next;
        delete(head);
        return newHead;
    }

    ListNode* middleNode(ListNode* head) {
        ListNode* slow=head, *fast=head;
        while(fast && fast->next && fast->next->next){
            slow=slow->next;
            fast=fast->next->next;
        }

        return slow;
    }
    ListNode* sortList(ListNode* head) {
        if(!head || !head->next) return head;

        ListNode* mid=middleNode(head);

        ListNode* a=head, *b=mid->next;
        mid->next=NULL;

        a=sortList(a);
        b=sortList(b);

        head=mergeTwoLists(a,b);

        return head;

        
    }
};
