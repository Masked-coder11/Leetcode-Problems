class Solution {
public:
    unordered_map<char, vector<char>>mp;
    
    void solve(int ind, string &digits, string curr, vector<string>&ans){
        if(ind==digits.size()){
            ans.push_back(curr);
            return;
        }

        for(auto it:mp[digits[ind]]){
            solve(ind+1, digits, curr+it, ans);
        }

        return;
    }

    vector<string> letterCombinations(string digits) {
        if(digits.size()==0) return {};
        mp['2']={'a','b','c'};
    mp['3']={'d','e','f'};
    mp['4']={'g','h','i'};
    mp['5']={'j','k','l'};
    mp['6']={'m','n','o'};
    mp['7']={'p','q','r','s'};
    mp['8']={'t','u','v'};
    mp['9']={'w','x','y','z'};
        vector<string>ans;
        int ind=0;
        string curr="";
        solve(ind, digits, curr, ans);
        return ans;
    }
};
