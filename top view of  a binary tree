/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        //Your code here
        vector<int>ans;
        queue<pair<Node*, int>>q;
        map<int, int>mp;
        if(root) q.push({root, 0});
        while(!q.empty()){
            Node* node=q.front().first;
            int vert= q.front().second;
            q.pop();
            if(mp.find(vert)==mp.end()){
                mp[vert]=node->data;
            }
            if(node->left){
                q.push({node->left, vert-1});
            }
            if(node->right){
                q.push({node->right, vert+1});
            }
        }
        
        for(auto it:mp){
            ans.push_back(it.second);
        }
        return ans;
        
    }

};
