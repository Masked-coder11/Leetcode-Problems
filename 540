class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int n=nums.size();

        if(n==1) return nums[0];

        int lo=0, hi=n-1;
        while(lo<=hi){
            int mid=(lo+hi)/2;
            if(mid==0){
                if(nums[mid]!=nums[mid+1]){
                    return nums[mid];
                }
                else{
                    lo=mid+2;
                }
            }
            else if(mid==n-1){
                if(nums[mid]!=nums[mid-1]){
                    return nums[mid];
                }
                else{
                    hi=mid-2;
                }
            }
            else if(nums[mid]==nums[mid+1]){
                int right=hi-mid-1;
                int left=mid-lo;
                if(right%2==0){
                    hi=mid-1;
                }
                else{
                    lo=mid+2;
                }
            }
            else if(nums[mid]==nums[mid-1]){
                int right=hi-mid;
                int left=mid-lo-1;
                if(right%2==0){
                    hi=mid-2;
                }
                else{
                    lo=mid+1;
                }
            }
            else{
                return nums[mid];
            }
        }
        return -1;
    }
};
