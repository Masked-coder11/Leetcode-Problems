class Solution {
public:
    void helper(TreeNode* root, vector<int>& ans){
        if(root){
            helper(root->left, ans);
            ans.push_back(root->val);
            helper(root->right, ans);
        }
        return;
    }

    vector<int> inorderTraversal(TreeNode* root) {
           vector<int>ans;
        //    helper(root, ans);
            stack<pair<TreeNode*, bool>>st;
            if(root){
                st.push({root, false});
            }
            while(!st.empty()){
                TreeNode* node=st.top().first;
                bool x=st.top().second;
                st.pop();

                if(x==false){
                    st.push({node, true});
                    if(node->left){
                        st.push({node->left, false});
                    }
                }
                else{
                    ans.push_back(node->val);
                    if(node->right){
                        st.push({node->right, false});
                    }
                }
            }
            return ans;
 
    }
};
